(** Ok, welll *)
(module Dogs
  (str
    (type dog {:name string :age float})
    (def fluff {:name_and_things_and_long "Fluff" :age 0.4})
    (defn humanAge [{:age}]
      (print_endline "Converting")
      (int_of_float (*. age 7.0)))
    ) )

; what folx
(+ 2 3)

(switch awesome
1 2
3 4
; this is a comment
also things)

(let [name_and_things_and_long 1234
      more_name_and_things_and_long evenmore
      one two ; eol,
  ; a comment
      three four]
  (+ one three))

(let [a 2] a)
[2 3 4]
(def words ["Hello world"])
(print_endline (String.concat " " (List.map String.uppercase words)))
(One.Thing.doThings 23)